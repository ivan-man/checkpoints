// <auto-generated />
using System;
using Hid.Checkpoint.Audit.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Hid.Checkpoint.Audit.DataAccess.Migrations
{
    [DbContext(typeof(AuditContext))]
    partial class AuditContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Hid.Checkpoint.Audit.DataAccess.Models.AuditEntityRecord", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("ChangesType")
                        .HasColumnType("integer")
                        .HasColumnName("changes_type");

                    b.Property<string>("DisplayName")
                        .HasColumnType("text")
                        .HasColumnName("display_name");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("integer")
                        .HasColumnName("employee_id");

                    b.Property<string>("EntityFullType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("entity_full_type");

                    b.Property<string>("EntityId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("entity_id");

                    b.Property<string>("EntityType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("entity_type");

                    b.Property<DateTime?>("Expired")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("expired");

                    b.Property<int>("InitiatorType")
                        .HasColumnType("integer")
                        .HasColumnName("initiator_type");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("integer")
                        .HasColumnName("profile_id");

                    b.Property<DateTime>("Stamp")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("stamp");

                    b.Property<string>("UserInfo")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_info");

                    b.HasKey("Id")
                        .HasName("pk_audit_records");

                    b.ToTable("audit_records", (string)null);
                });

            modelBuilder.Entity("Hid.Checkpoint.Audit.DataAccess.Models.AuditMemberRecord", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("AuditEntityRecordId")
                        .HasColumnType("bigint")
                        .HasColumnName("audit_entity_record_id");

                    b.Property<string>("DisplayName")
                        .HasColumnType("text")
                        .HasColumnName("display_name");

                    b.Property<string>("NewValue")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("new_value");

                    b.Property<string>("OldValue")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("old_value");

                    b.Property<string>("PropertyName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("property_name");

                    b.HasKey("Id")
                        .HasName("pk_audit_member_record");

                    b.HasIndex("AuditEntityRecordId")
                        .HasDatabaseName("ix_audit_member_record_audit_entity_record_id");

                    b.ToTable("audit_member_record", (string)null);
                });

            modelBuilder.Entity("Hid.Checkpoint.Audit.DataAccess.Models.AuditMemberRecord", b =>
                {
                    b.HasOne("Hid.Checkpoint.Audit.DataAccess.Models.AuditEntityRecord", "AuditEntityRecord")
                        .WithMany("AuditMembers")
                        .HasForeignKey("AuditEntityRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_audit_member_record_audit_records_audit_entity_record_id");

                    b.Navigation("AuditEntityRecord");
                });

            modelBuilder.Entity("Hid.Checkpoint.Audit.DataAccess.Models.AuditEntityRecord", b =>
                {
                    b.Navigation("AuditMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
